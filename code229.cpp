/*
大富翁游戏，玩家根据骰子的点数决定走的步数，即骰子点数为1时可以走一步，点数为2时可以走两步，点数为n时可以走n步。求玩家走到第n步（n<=骰子最大点数且是方法的唯一入参）时，总共有多少种投骰子的方法。 
输入描述:
输入包括一个整数n,(1 ≤ n ≤ 6)


输出描述:
输出一个整数,表示投骰子的方法

输入例子1:
6

输出例子1:
32
*/
/*
思路：
动态规划
水题一道
*/

#include <iostream>
using namespace std;

int a[10000];

int main(int argc, char const *argv[])
{
	a[1] = 1;
	a[2] = 2;
	a[3] = 4;
	a[4] = 8;
	a[5] = 16;
	a[6] = 32;

	int n;
	cin >> n;

	for (int i = 7; i <= n; ++i) {
		a[i] = a[i - 1] + a[i - 2] + a[i - 3] + a[i - 4] + a[i - 5] + a[i - 6];
	}

	cout << a[n];

	return 0;
}